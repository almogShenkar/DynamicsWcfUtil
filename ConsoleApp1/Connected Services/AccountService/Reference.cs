//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.AccountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        string CreateAccount(string firstName, string lastname, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        System.Threading.Tasks.Task<string> CreateAccountAsync(string firstName, string lastname, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByEmail", ReplyAction="http://tempuri.org/IAccountService/GetAccountByEmailResponse")]
        string GetAccountByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountByEmail", ReplyAction="http://tempuri.org/IAccountService/GetAccountByEmailResponse")]
        System.Threading.Tasks.Task<string> GetAccountByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdatePhoneByEmail", ReplyAction="http://tempuri.org/IAccountService/UpdatePhoneByEmailResponse")]
        string UpdatePhoneByEmail(string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdatePhoneByEmail", ReplyAction="http://tempuri.org/IAccountService/UpdatePhoneByEmailResponse")]
        System.Threading.Tasks.Task<string> UpdatePhoneByEmailAsync(string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteAccountByEmail", ReplyAction="http://tempuri.org/IAccountService/DeleteAccountByEmailResponse")]
        string DeleteAccountByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteAccountByEmail", ReplyAction="http://tempuri.org/IAccountService/DeleteAccountByEmailResponse")]
        System.Threading.Tasks.Task<string> DeleteAccountByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : ConsoleApp1.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<ConsoleApp1.AccountService.IAccountService>, ConsoleApp1.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreateAccount(string firstName, string lastname, string email, string phone) {
            return base.Channel.CreateAccount(firstName, lastname, email, phone);
        }
        
        public System.Threading.Tasks.Task<string> CreateAccountAsync(string firstName, string lastname, string email, string phone) {
            return base.Channel.CreateAccountAsync(firstName, lastname, email, phone);
        }
        
        public string GetAccountByEmail(string email) {
            return base.Channel.GetAccountByEmail(email);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountByEmailAsync(string email) {
            return base.Channel.GetAccountByEmailAsync(email);
        }
        
        public string UpdatePhoneByEmail(string email, string phone) {
            return base.Channel.UpdatePhoneByEmail(email, phone);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePhoneByEmailAsync(string email, string phone) {
            return base.Channel.UpdatePhoneByEmailAsync(email, phone);
        }
        
        public string DeleteAccountByEmail(string email) {
            return base.Channel.DeleteAccountByEmail(email);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAccountByEmailAsync(string email) {
            return base.Channel.DeleteAccountByEmailAsync(email);
        }
    }
}
